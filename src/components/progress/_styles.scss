// src/components/progress/_styles.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

$component: '#{base.$prefix}-progress';

.#{$component} {
  // Base styles
  position: relative;
  display: block;
  overflow: hidden;
  
  // Common accessibility attributes
  &[aria-disabled="true"] {
    opacity: 0.38;
    pointer-events: none;
  }
  
  // Linear progress variant
  &--linear {
    width: 100%;
    height: 4px; // Default height
    
    .#{$component}-track {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: t.color('surface-container-highest');
    }
    
    .#{$component}-buffer {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0;
      background-color: t.alpha('primary', 0.4);
      transition: width 0.3s ease;
    }
    
    .#{$component}-indicator {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0;
      background-color: t.color('primary');
      transition: width 0.3s ease;
    }
    
    // Indeterminate animation for linear progress
    &.#{$component}--indeterminate {
      .#{$component}-buffer {
        display: none;
      }
      
      .#{$component}-indicator {
        width: 30%;
        animation: linear-indeterminate 2s infinite;
      }
    }
    
    .#{$component}-label {
      position: absolute;
      right: 0;
      top: 8px;
      font-size: 12px;
      color: t.color('on-surface-variant');
    }
  }
  
  // Circular progress variant
  &--circular {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    
    svg {
      width: 100%;
      height: 100%;
      transform: rotate(-90deg);
    }
    
    .#{$component}-track {
      stroke: t.color('surface-container-highest');
      fill: none;
    }
    
    .#{$component}-indicator {
      stroke: t.color('primary');
      fill: none;
      stroke-dasharray: 283; // 2*PI*45
      stroke-dashoffset: 283;
      transition: stroke-dashoffset 0.3s ease;
    }
    
    // Indeterminate animation for circular progress
    &.#{$component}--indeterminate {
      .#{$component}-indicator {
        animation: circular-indeterminate 1.5s linear infinite;
      }
    }
    
    .#{$component}-label {
      position: absolute;
      font-size: 12px;
      color: t.color('on-surface-variant');
    }
  }
  
  // Size variants
  &--small {
    &.#{$component}--linear {
      height: 2px;
    }
    
    &.#{$component}--circular {
      width: 24px;
      height: 24px;
      
      .#{$component}-track,
      .#{$component}-indicator {
        stroke-width: 3;
      }
    }
  }
  
  &--medium {
    &.#{$component}--linear {
      height: 4px;
    }
    
    &.#{$component}--circular {
      width: 48px;
      height: 48px;
      
      .#{$component}-track,
      .#{$component}-indicator {
        stroke-width: 4;
      }
    }
  }
  
  &--large {
    &.#{$component}--linear {
      height: 8px;
      
      .#{$component}-label {
        font-size: 14px;
        top: 12px;
      }
    }
    
    &.#{$component}--circular {
      width: 64px;
      height: 64px;
      
      .#{$component}-track,
      .#{$component}-indicator {
        stroke-width: 6;
      }
      
      .#{$component}-label {
        font-size: 14px;
      }
    }
  }
  
  // Disabled state
  &--disabled {
    opacity: 0.38;
    pointer-events: none;
  }
}

// Keyframes for indeterminate animations
@keyframes linear-indeterminate {
  0% {
    left: -30%;
  }
  100% {
    left: 100%;
  }
}

@keyframes circular-indeterminate {
  0% {
    stroke-dashoffset: 283;
  }
  50% {
    stroke-dashoffset: 70;
  }
  100% {
    stroke-dashoffset: 283;
    transform: rotate(360deg);
  }
}