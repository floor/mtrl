// src/components/switch/_switch.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

$component: '#{base.$prefix}-switch';

.#{$component} {
  // Base styles
  display: inline-flex;
  align-items: center;
  position: relative;
  min-height: 32px;
  padding: 4px 0;
  user-select: none;

  // Input (visually hidden but accessible)
  &-input {
    position: absolute;
    opacity: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    cursor: pointer;
    z-index: 1;

    &:disabled {
      cursor: not-allowed;
    }

    // Focus indicator
    &:focus-visible ~ .#{$component}-track {
      outline: 2px solid t.color('primary');
      outline-offset: 2px;
    }
  }

  // Switch track (background bar)
  &-track {
    position: relative;
    min-width: 52px;
    height: 32px;
    border-radius: 16px;
    background-color: t.color('surface-container-highest');
    border: 2px solid t.color('outline');
    @include m.motion-transition(background-color, border-color, outline);
  }

  // Switch thumb (slider)
  &-thumb {
    position: absolute;
    top: 6px;
    left: 6px;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: t.color('outline');
    transform: translateX(0);
    transition: all v.motion('duration-short4') v.motion('easing-emphasized');
    display: flex;
    align-items: center;
    justify-content: center;

    // Icon inside thumb
    &-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transform: scale(0);
      transition: all v.motion('duration-short4') v.motion('easing-emphasized');
      color: t.color('primary');
      
      svg {
        width: 14px;
        height: 14px;
      }
    }
  }

  // Label
  &-label {
    @include m.typography('body-large');
    margin-left: 12px;
    color: t.color('on-surface');
  }

  // Label position variants
  &--label-start {
    flex-direction: row-reverse;

    .#{$component}-label {
      margin-left: 0;
      margin-right: 12px;
    }
  }

  &--label-end {
    flex-direction: row;

    .#{$component}-label {
      margin-left: 12px;
      margin-right: 0;
    }
  }

  // RTL support
  @include m.rtl {
    &--label-start {
      .#{$component}-label {
        margin-left: 12px;
        margin-right: 0;
      }
    }

    &--label-end {
      .#{$component}-label {
        margin-left: 0;
        margin-right: 12px;
      }
    }
    
    // Adjust thumb movement for RTL layout
    &--checked .#{$component}-thumb {
      transform: translateX(-20px);
    }
  }

  // Checked state
  &--checked {
    .#{$component}-track {
      background-color: t.color('primary');
      border-color: t.color('primary');
    }

    .#{$component}-thumb {
      background-color: t.color('on-primary');
      transform: translateX(20px);
      width: 24px;
      height: 24px;
      top: 2px;
      left: 2px;

      &-icon {
        opacity: 1;
        transform: scale(1);
      }
    }
  }

  // Disabled state
  &--disabled {
    opacity: 0.38;
    
    // Specific styles for disabled + checked
    &.#{$component}--checked {
      .#{$component}-track {
        background-color: t.color('outline');
        border-color: t.color('outline');
        opacity: 0.38;
      }
      
      .#{$component}-thumb {
        background-color: t.color('on-primary');
        opacity: 1;
        &-icon {
          color: t.color('outline')
        }
      }
    }
  }

  // Hover effects (state layer)
  &:not(&--disabled) {
    .#{$component}-input:hover + .#{$component}-track {
      &::before {
        content: '';
        position: absolute;
        top: -8px;
        left: -8px;
        right: -8px;
        bottom: -8px;
        background-color: t.color('on-surface');
        opacity: v.state('hover-state-layer-opacity');
        border-radius: 20px;
      }
    }
    
    // Active/pressed state
    .#{$component}-input:active + .#{$component}-track {
      &::before {
        content: '';
        position: absolute;
        top: -8px;
        left: -8px;
        right: -8px;
        bottom: -8px;
        background-color: t.color('on-surface');
        opacity: v.state('pressed-state-layer-opacity');
        border-radius: 20px;
      }
    }
    
    // Hover/active states when checked
    &.#{$component}--checked {
      .#{$component}-input:hover + .#{$component}-track::before,
      .#{$component}-input:active + .#{$component}-track::before {
        background-color: t.color('primary');
      }
    }
  }

  // Accessibility
  @include m.reduced-motion {
    .#{$component}-track,
    .#{$component}-thumb,
    .#{$component}-thumb-icon {
      transition: none;
    }
  }

  @include m.high-contrast {
    .#{$component}-track {
      border-width: 2px;
    }
    
    &--checked .#{$component}-track {
      border-color: currentColor;
    }
  }
  
  // Touch target for better mobile experience
  // @include m.touch-target;
}