// src/components/chip/_chip.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

$component: '#{base.$prefix}-chip';

.#{$component} {
  // Base styles
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 32px;
  padding: 0 12px;
  border: none;
  border-radius: 8px;
  background-color: transparent;
  color: inherit;
  font: inherit;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  vertical-align: middle;
  appearance: none;
  overflow: hidden;
  transition: background-color 0.15s ease, box-shadow 0.15s ease, color 0.15s ease, 
              border-color 0.15s ease, opacity 0.15s ease;
  
  // Typography
  @include m.typography('label-large');
  
  // Focus styles
  &:focus {
    outline: none;
  }
  
  &:focus-visible {
    outline: 2px solid t.color('outline');
    outline-offset: 2px;
  }
  
  // Disabled state
  &[aria-disabled="true"] {
    pointer-events: none;
    opacity: 0.38;
  }
  
  // Leading icon styles
  &-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 18px;
    height: 18px;
    margin-right: 8px;
    
    svg {
      width: 18px;
      height: 18px;
    }
  }
  
  // Trailing icon styles
  &-trailing-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 18px;
    height: 18px;
    margin-left: 8px;
    
    svg {
      width: 18px;
      height: 18px;
    }
    
    &:hover {
      opacity: 0.8;
    }
  }
  
  // Text content
  &-text {
    // Text truncation for long chip labels
    @include m.truncate;
    max-width: 150px;
  }
  
  // Ripple container
  .ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    pointer-events: none;
    background-color: currentColor;
    opacity: 0.12;
  }
  
  // === VARIANTS ===
  
  // Filled chip (default)
  &--filled {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
      
      &:active {
        @include m.state-layer(t.color('on-secondary-container'), 'pressed');
      }
    }
  }
  
  // Outlined chip
  &--outlined {
    border: 1px solid t.color('outline');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
    
    &.#{$component}--selected {
      border-color: t.color('secondary');
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
      
      &:active {
        @include m.state-layer(t.color('on-secondary-container'), 'pressed');
      }
    }
  }
  
  // Elevated chip
  &--elevated {
    background-color: t.color('surface-container-low');
    color: t.color('on-surface');
    @include m.elevation(1);
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
      @include m.elevation(2);
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
      @include m.elevation(1);
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
      
      &:active {
        @include m.state-layer(t.color('on-secondary-container'), 'pressed');
      }
    }
    
    &[aria-disabled="true"] {
      @include m.elevation(0);
      box-shadow: none;
    }
  }
  
  // Assist chip
  &--assist {
    background-color: t.color('surface-container');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
    
    .#{$component}-icon {
      color: t.color('primary');
    }
  }
  
  // Filter chip
  &--filter {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
      
      &:active {
        @include m.state-layer(t.color('on-secondary-container'), 'pressed');
      }
      
      // Checkmark icon for selected filter chips
      .#{$component}-icon {
        color: t.color('on-secondary-container');
      }
    }
  }
  
  // Input chip
  &--input {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    padding-right: 8px; // Less padding on the right to accommodate the trailing icon
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    .#{$component}-trailing-icon {
      color: t.color('on-surface-variant');
      
      &:hover {
        color: t.color('on-surface');
      }
    }
  }
  
  // Suggestion chip
  &--suggestion {
    background-color: t.color('surface-container');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
  }
  
  // === SIZES ===
  
  &--small {
    height: 24px;
    padding: 0 8px;
    font-size: 12px;
    
    .#{$component}-icon,
    .#{$component}-trailing-icon {
      width: 16px;
      height: 16px;
      
      svg {
        width: 16px;
        height: 16px;
      }
    }
    
    .#{$component}-icon {
      margin-right: 4px;
    }
    
    .#{$component}-trailing-icon {
      margin-left: 4px;
    }
  }
  
  &--large {
    height: 40px;
    padding: 0 16px;
    font-size: 15px;
    border-radius: 12px;
    
    .#{$component}-icon,
    .#{$component}-trailing-icon {
      width: 20px;
      height: 20px;
      
      svg {
        width: 20px;
        height: 20px;
      }
    }
    
    .#{$component}-icon {
      margin-right: 10px;
    }
    
    .#{$component}-trailing-icon {
      margin-left: 10px;
    }
  }
  
  // === SPECIAL CASES ===
  
  // For chips with only icons (no text)
  &--icon-only {
    padding: 0;
    width: 32px;
    
    &.#{$component}--small {
      width: 24px;
    }
    
    &.#{$component}--large {
      width: 40px;
    }
    
    .#{$component}-icon {
      margin-right: 0;
    }
  }
}

// === CHIP SET STYLES ===

.#{$component}-set {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  
  &--scrollable {
    flex-wrap: nowrap;
    overflow-x: auto;
    scrollbar-width: none; // Firefox
    
    &::-webkit-scrollbar {
      display: none; // Chrome, Safari, Edge
    }
  }
  
  &--vertical {
    flex-direction: column;
    align-items: flex-start;
  }
}