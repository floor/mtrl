// src/components/list/_list.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

// Component variables
$component: '#{base.$prefix}-list';
$list-item-height: 48px !default;
$list-item-dense-height: 40px !default;
$list-padding: 8px !default;
$list-item-padding: 16px !default;
$list-section-padding: 16px !default;

// Component-specific mixins
@mixin list-item-hover {
  @include m.state-layer(t.color('on-surface'), 'hover');
}

@mixin list-section-title {
  @include m.typography('label-large');
  color: t.color('primary');
  padding: $list-section-padding $list-item-padding 8px;
}

// LIST COMPONENT
.#{$component} {
  display: flex;
  flex-direction: column;
  padding: $list-padding 0;
  min-width: 200px;
  background-color: t.color('surface');

  // Sections
  &-section {
    display: flex;
    flex-direction: column;
    width: 100%;

    &:not(:last-child) {
      margin-bottom: $list-padding;
    }
  }

  &-section-title {
    @include list-section-title;
  }

  // Dividers
  &-divider {
    height: 1px;
    margin: $list-padding 0;
    background-color: t.color('outline-variant');
  }

  // Selection states
  &[data-type="single"],
  &[data-type="multi"],
  &[data-type="radio"] {
    .#{$component}-item {
      cursor: pointer;

      &--selected {
        background-color: t.color('secondary-container');
        color: t.color('on-secondary-container');

        &:hover {
          background-color: t.color('secondary-container');
          @include m.state-layer(t.color('on-secondary-container'), 'hover');
        }

        .#{$component}-item-supporting {
          color: t.color('on-secondary-container');
        }
      }
    }
  }

  // Dense variant
  &--dense {
    .#{$component}-item {
      min-height: $list-item-dense-height;
    }
  }

  // Disabled state
  &--disabled {
    pointer-events: none;
    opacity: 0.38;
  }

  // RTL Support
  @include m.rtl {
    .#{$component}-section-title {
      text-align: right;
    }
  }

  // High contrast mode
  @include m.high-contrast {
    border: 1px solid currentColor;

    &-divider {
      border-top: 1px solid currentColor;
      background: none;
    }
  }
  
  // LIST ITEM STYLES
  &-item {
    display: flex;
    align-items: center;
    min-height: $list-item-height;
    padding: $list-padding $list-item-padding;
    position: relative;
    gap: 16px;
    cursor: pointer;
    color: t.color('on-surface');
    @include m.motion-transition(background-color);

    &:hover {
      @include list-item-hover;
    }

    &:focus-visible {
      @include m.state-layer(t.color('on-surface'), 'focus');
      outline: none;
    }

    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }

    // Content layout
    &-content {
      flex: 1;
      min-width: 0; // Enable text truncation
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    // Text elements
    &-text {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    &-overline {
      @include m.typography('label-small');
      color: t.color('on-surface-variant');
    }

    &-headline {
      @include m.typography('body-large');
      color: t.color('on-surface');
    }

    &-supporting {
      @include m.typography('body-medium');
      color: t.color('on-surface-variant');
    }

    &-meta {
      @include m.typography('label-small');
      color: t.color('on-surface-variant');
      margin-top: 4px;
    }

    // Leading/trailing elements
    &-leading,
    &-trailing {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }

    &-leading {
      width: 24px;
      height: 24px;
      color: t.color('on-surface-variant');

      svg {
        width: 100%;
        height: 100%;
      }
    }

    &-trailing {
      color: t.color('on-surface-variant');
    }

    // Vertical layout variant
    &.vertical {
      min-height: 72px;
      padding: 12px $list-item-padding;

      .#{$component}-item {
        &-content {
          flex-direction: column;
          gap: 4px;
        }

        &-meta {
          margin-top: $list-padding;
        }
      }
    }

    // States
    &--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');

      .#{$component}-item {
        &-leading,
        &-trailing {
          color: t.color('on-secondary-container');
        }
      }
    }

    &--disabled {
      opacity: 0.38;
      pointer-events: none;
    }

    // RTL Support
    @include m.rtl {
      .#{$component}-item {
        &-text {
          text-align: right;
        }
      }
    }

    // High contrast mode
    @include m.high-contrast {
      &--selected {
        outline: 2px solid currentColor;
        outline-offset: -2px;
      }
    }
  }
}