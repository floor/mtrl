// src/components/list/styles/_list.scss

@use '../../../styles/abstract/config' as c;
@use 'variables' as v;

.#{c.$prefix}-list {
  display: flex;
  flex-direction: column;
  padding: v.$list-padding 0;
  min-width: 200px;
  background-color: var(--mtrl-sys-color-surface);

  // Sections
  &-section {
    display: flex;
    flex-direction: column;
    width: 100%;

    &:not(:last-child) {
      margin-bottom: v.$list-padding;
    }
  }

  &-section-title {
    @include c.typography('label-large');
    color: v.$list-section-title-color;
    padding: v.$list-section-padding v.$list-item-padding 8px;
  }

  // Dividers
  &-divider {
    height: 1px;
    margin: v.$list-padding 0;
    background-color: v.$list-divider-color;
  }

  // Selection states
  &[data-type="single"],
  &[data-type="multi"],
  &[data-type="radio"] {
    .#{c.$prefix}-list-item {
      cursor: pointer;

      &--selected {
        background-color: var(--mtrl-sys-color-secondary-container);
        color: var(--mtrl-sys-color-on-secondary-container);

        &:hover {
          background-color: var(--mtrl-sys-color-secondary-container);
          @include c.state-layer(var(--mtrl-sys-color-on-secondary-container), 'hover');
        }

        .#{c.$prefix}-list-item-supporting {
          color: var(--mtrl-sys-color-on-secondary-container);
        }
      }
    }
  }

  // Dense variant
  &--dense {
    .#{c.$prefix}-list-item {
      min-height: v.$list-item-dense-height;
    }
  }

  // Disabled state
  &--disabled {
    pointer-events: none;
    opacity: 0.38;
  }

  // RTL Support
  @include c.rtl {
    .#{c.$prefix}-list-section-title {
      text-align: right;
    }
  }

  // High contrast mode
  @include c.high-contrast {
    border: 1px solid currentColor;

    &-divider {
      border-top: 1px solid currentColor;
      background: none;
    }
  }
}