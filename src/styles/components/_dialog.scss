// src/components/dialog/_dialog.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

$component: '#{base.$prefix}-dialog';

// Dialog overlay (background scrim)
.#{$component}-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: t.alpha('scrim', 0.48);
  opacity: 0;
  z-index: v.z-index('modal');
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: auto;
  padding: 24px;
  box-sizing: border-box;
  // Use proper SCSS function calls for transition values
  $duration: v.motion('duration-short4');
  $easing: v.motion('easing-standard');
  transition: opacity #{$duration} #{$easing},
              visibility #{$duration} #{$easing};
  
  &--visible {
    opacity: 1;
    visibility: visible;
  }
}

// Dialog container
.#{$component} {
  position: relative;
  background-color: t.color('surface-container-high');
  color: t.color('on-surface');
  border-radius: v.shape('extra-large'); // 28dp corner radius
  max-width: 560px;
  min-width: 280px;
  width: 100%;
  margin: auto;
  opacity: 0;
  transform: scale(0.8);
  $duration: v.motion('duration-short4');
  $easing: v.motion('easing-standard');
  transition: transform #{$duration} #{$easing},
              opacity #{$duration} #{$easing};
  @include m.elevation(3);
  
  &--visible {
    opacity: 1;
    transform: scale(1);
  }
  
  // Size variants
  &--small {
    width: 80%;
    max-width: 360px;
  }
  
  &--medium {
    width: 90%;
    max-width: 560px;
  }
  
  &--large {
    width: 95%;
    max-width: 800px;
  }
  
  &--fullwidth {
    width: 100%;
    max-width: none;
    margin: 24px;
  }
  
  &--fullscreen {
    width: 100%;
    height: 100%;
    max-width: none;
    max-height: none;
    margin: 0;
    border-radius: 0;
  }
  
  // Animation variants
  &--slide-up {
    transform: translateY(50px);
    
    &.#{$component}--visible {
      transform: translateY(0);
    }
  }
  
  &--slide-down {
    transform: translateY(-50px);
    
    &.#{$component}--visible {
      transform: translateY(0);
    }
  }
  
  &--fade {
    transform: scale(1);
    
    &.#{$component}--visible {
      transform: scale(1);
    }
  }
}

// Dialog header
.#{$component}-header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding: 24px 24px 16px 24px;
  
  &-content {
    flex: 1;
  }
  
  &-title {
    margin: 0;
    font-size: 24px;
    line-height: 32px;
    font-weight: 400;
    color: t.color('on-surface');
    @include m.typography('headline-small');
  }
  
  &-subtitle {
    margin: 4px 0 0 0;
    @include m.typography('body-medium');
    color: t.color('on-surface-variant');
  }
  
  &-close {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    margin: -8px -8px 0 0;
    padding: 8px;
    background: transparent;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    color: t.color('on-surface-variant');
    
    &:hover {
      background-color: t.alpha('on-surface', 0.08);
    }
    
    &:focus {
      outline: none;
      background-color: t.alpha('on-surface', 0.12);
    }
    
    svg {
      width: 24px;
      height: 24px;
    }
  }
}

// Dialog content
.#{$component}-content {
  padding: 16px 24px;
  color: t.color('on-surface');
  @include m.typography('body-medium');
  
  p {
    margin: 0 0 16px 0;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
}

// Dialog footer
.#{$component}-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: 24px;
  gap: 8px;
  
  &--left {
    justify-content: flex-start;
  }
  
  &--center {
    justify-content: center;
  }
  
  &--space-between {
    justify-content: space-between;
  }
}

// Dialog divider styling
.#{$component}-header-divider {
  margin: 0;
}

.#{$component}-footer-divider {
  margin: 0;
}

// Accessibility
@include m.reduced-motion {
  .#{$component},
  .#{$component}-overlay {
    transition: none;
  }
}

// Mobile responsiveness
@media (max-width: v.breakpoint('sm')) {
  .#{$component} {
    min-width: 280px;
    width: calc(100% - 32px);
    max-width: 100%;
    margin: 16px;
    
    &--fullscreen {
      width: 100%;
      height: 100%;
      margin: 0;
    }
  }
  
  .#{$component}-overlay {
    padding: 16px;
    align-items: flex-end;
    
    &.#{$component}--fullscreen {
      padding: 0;
    }
  }
  
  // Adjust animations for mobile
  .#{$component}--slide-up {
    transform: translateY(100%);
    
    &.#{$component}--visible {
      transform: translateY(0);
    }
  }
}