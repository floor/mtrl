// src/components/menu/_menu.scss
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/theme' as t;
@use '../../styles/abstract/motion' as motion;
@use '../../styles/abstract/typography' as typography;

$component: 'mtrl-menu';

.#{$component} {
  // Base styles
  @include typography.style('body-medium');
  @include m.shape('extra-small');
  
  position: fixed;
  z-index: v.$z-index-menu;
  min-width: 112px;
  max-width: 280px;
  overflow: hidden;
  background-color: t.prop('surface-container');
  color: t.prop('on-surface');
  @include m.elevation(2);
  
  // Initial state - hidden
  opacity: 0;
  visibility: hidden;
  transform: scale(0.9);
  transform-origin: top left;
  pointer-events: none;
  transition: 
    opacity motion.duration('medium') motion.easing('standard'),
    transform motion.duration('medium') motion.easing('standard'),
    visibility 0s linear motion.duration('medium');
  
  // Visible state
  &--visible {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
    pointer-events: auto;
    transition:
      opacity motion.duration('medium') motion.easing('standard'),
      transform motion.duration('medium') motion.easing('standard'),
      visibility 0s linear 0s;
  }
  
  // Submenu specific styles
  &--submenu {
    position: absolute;
  }
  
  // Menu list container
  &-list {
    margin: 0;
    padding: 8px 0;
    list-style: none;
    overflow-y: auto;
    max-height: calc(100vh - 96px);
    
    // Scrollbar styling
    @include m.scrollbar;
  }
  
  // Menu item styles
  &-item {
    position: relative;
    display: flex;
    align-items: center;
    min-height: 48px;
    padding: 0 12px;
    cursor: pointer;
    user-select: none;
    outline: none;
    @include m.interactive;
    
    // State layers for interactions
    &:hover {
      @include m.state-layer('hover');
    }
    
    &:focus-visible {
      @include m.state-layer('focus');
    }
    
    &:active {
      @include m.state-layer('pressed');
    }
    
    // Disabled state
    &--disabled {
      opacity: 0.38;
      pointer-events: none;
    }
    
    // Item with submenu indicator
    &--submenu {
      &::after {
        content: '';
        width: 24px;
        height: 24px;
        margin-left: 4px;
        @include m.icon('navigate_next');
        opacity: 0.8;
      }
      
      &[aria-expanded="true"] {
        @include m.state-layer('hover');
        
        &::after {
          opacity: 1;
        }
      }
    }
  }
  
  // Item content layout
  &-item-content {
    display: flex;
    align-items: center;
    width: 100%;
    min-width: 0;
  }
  
  // Icon in menu item
  &-item-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    margin-right: 12px;
    color: t.prop('on-surface-variant');
    
    svg {
      width: 20px;
      height: 20px;
    }
  }
  
  // Text in menu item
  &-item-text {
    flex: 1;
    padding: 14px 0;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  
  // Keyboard shortcut text
  &-item-shortcut {
    margin-left: 16px;
    font-size: typography.size('label-large');
    color: t.prop('on-surface-variant');
    opacity: 0.8;
  }
  
  // Divider
  &-divider {
    height: 1px;
    margin: 8px 0;
    background-color: t.prop('outline-variant');
  }
  
  // Focus visible style
  &-item:focus-visible {
    @include m.focus-ring;
  }
  
  // RTL Support
  [dir="rtl"] & {
    transform-origin: top right;
    
    .#{$component}-item {
      &--submenu {
        &::after {
          transform: rotate(180deg);
          margin-right: 4px;
          margin-left: 0;
        }
      }
      
      &-icon {
        margin-right: 0;
        margin-left: 12px;
      }
      
      &-shortcut {
        margin-left: 0;
        margin-right: 16px;
      }
    }
  }
  
  // Reduced motion
  @media (prefers-reduced-motion: reduce) {
    transition: opacity 0.05s linear, visibility 0s linear 0.05s;
    
    &--visible {
      transition: opacity 0.05s linear, visibility 0s linear 0s;
    }
    
    transform: none;
  }
  
  // High contrast mode
  @media (forced-colors: active) {
    border: 1px solid CanvasText;
    
    &-divider {
      background-color: CanvasText;
    }
    
    &-item {
      &--disabled {
        color: GrayText;
        opacity: 1;
      }
    }
  }
}