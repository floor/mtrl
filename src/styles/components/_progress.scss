// src/components/progress/_progress.scss - Canvas-based progress styles (no SVG dependency)
@use "../../styles/abstract/base" as base;
@use "../../styles/abstract/variables" as v;
@use "../../styles/abstract/functions" as f;
@use "../../styles/abstract/mixins" as m;
@use "../../styles/abstract/theme" as t;
@use "sass:math";

$component: "#{base.$prefix}-progress";

.#{$component} {
  // Base container styles
  position: relative;
  display: block;
  overflow: hidden;
  transition: opacity 0.1s ease-in-out;
  // Common accessibility attributes
  &[aria-disabled="true"] {
    opacity: 0.38;
    pointer-events: none;
  }

  .#{$component}[style*="display: none"] {
    opacity: 0 !important;
    transition: none !important;
  }

  // Canvas element - shared by both variants
  &-canvas {
    display: block;
    width: 100%;
    height: 100%;
    max-width: 100%; // Prevent canvas from growing beyond container
    box-sizing: border-box; // Include borders in width calculation
    position: relative; // Ensure proper stacking context

    // Smooth transitions for canvas transforms (used in animations)
    transition: transform 0.3s ease;
  }

  // Linear progress variant
  &--linear {
    width: 100%;
    margin: 0 4px;
    // Allow overflow for label visibility
    overflow: visible;
    min-height: 20px; // Ensure enough height for label
    padding-bottom: 20px; // Space for label below

    // When label is present, ensure proper spacing
    &:has(.#{$component}__label) {
      margin-bottom: 8px;
    }
  }

  // Circular progress variant
  &--circular {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }

  // Label element (created dynamically when showLabel is used)
  &__label {
    position: absolute;
    font-size: 12px;
    color: t.color("on-surface-variant");
    white-space: nowrap;
    transition: opacity 0.3s ease;
    z-index: 1; // Ensure label is above canvas

    // Position differently based on variant
    .#{$component}--linear & {
      position: absolute;
      right: 0;
      top: initial;
      margin-top: 4px;
      // Remove transform and background for below positioning
      font-size: 11px;
      color: t.color("on-surface-variant");
    }

    .#{$component}--circular & {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-weight: 500;
    }
  }

  // Disabled state
  &--disabled {
    opacity: 0.38;
    pointer-events: none;

    // Disable animations when disabled
    .#{$component}-canvas {
      animation: none !important;
    }
  }
}
