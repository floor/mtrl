// src/styles/components/_chips.scss
@use '../abstract/base' as base;
@use '../abstract/variables' as v;
@use '../abstract/functions' as f;
@use '../abstract/mixins' as m;
@use '../abstract/theme' as t;

$component: '#{base.$prefix}-chip';
$container: '#{base.$prefix}-chips';

.#{$component} {
  // Base styles
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: v.chip('height');
  padding: 0 v.chip('padding-horizontal');
  border-radius: v.chip('border-radius');
  background-color: transparent;
  max-width: 100%;
  user-select: none;
  cursor: pointer;
  
  // Typography
  @include m.typography('label-large');
  
  // Interaction styles
  @include m.motion-transition(background-color, color, border-color, box-shadow);
  
  // Focus styles
  &:focus {
    outline: none;
  }
  
  &:focus-visible {
    outline: 2px solid t.color('outline');
    outline-offset: 2px;
  }
  
  // Disabled state
  &--disabled {
    opacity: 0.38;
    pointer-events: none;
  }
  
  // Content container
  &-content {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    gap: v.spacing('2');
  }
  
  // Ensure proper layout with icons
  &-leading-icon,
  &-trailing-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: v.chip('icon-size');
    height: v.chip('icon-size');
    flex-shrink: 0;
    
    svg {
      width: v.chip('icon-size');
      height: v.chip('icon-size');
    }
  }
  
  &-leading-icon {
    margin-right: 0; // Gap is handled by the content container
  }
  
  &-trailing-icon {
    margin-left: 0; // Gap is handled by the content container
    
    &:hover {
      opacity: 0.8;
    }
  }
  
  &-text {
    // Allow text to display normally
    white-space: nowrap;
    overflow: visible;
  }
  
  // Selected state (base)
  &--selected {
    font-weight: 500;
  }
  
  // Ripple container - state layers for interaction feedback
  .ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    pointer-events: none;
    background-color: currentColor;
    opacity: 0.12;
  }
  
  // ====== CHIP VARIANTS ======
  
  // Filled chip
  &--filled {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
      
      &:active {
        @include m.state-layer(t.color('on-secondary-container'), 'pressed');
      }
    }
  }
  
  // Outlined chip
  &--outlined {
    border: 1px solid t.alpha('outline', v.chip('outlined-border-opacity'));
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
      border-color: t.alpha('outline', v.chip('outlined-border-hover-opacity'));
    }
    
    &:focus-visible {
      border-color: t.alpha('outline', v.chip('outlined-border-focus-opacity'));
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
      border-color: t.alpha('outline', v.chip('outlined-border-hover-opacity'));
    }
    
    &.#{$component}--selected {
      border-color: transparent;
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
        border-color: t.alpha('outline', 0.08);
      }
    }
  }
  
  // Elevated chip
  &--elevated {
    background-color: t.color('surface-container-low');
    color: t.color('on-surface');
    @include m.elevation(1);
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
      @include m.elevation(2);
    }
    
    &:active {
      @include m.state-layer(t.color('on-surface'), 'pressed');
      @include m.elevation(1);
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      &:hover {
        @include m.state-layer(t.color('on-secondary-container'), 'hover');
      }
    }
  }
  
  // Filter chip
  &--filter {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      .#{$component}-leading-icon {
        color: t.color('on-secondary-container');
      }
      
      // Selected filter chips sometimes show a checkmark
      &::before {
        content: '';
        display: inline-block;
        width: 18px;
        height: 18px;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='currentColor'%3E%3Cpath d='M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z'/%3E%3C/svg%3E");
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        margin-right: 8px;
        flex-shrink: 0;
      }
    }
  }
  
  // Assist chip
  &--assist {
    background-color: t.color('surface-container-low');
    color: t.color('on-surface');
    
    .#{$component}-leading-icon {
      color: t.color('primary');
    }
    
    &:hover {
      @include m.state-layer(t.color('on-surface'), 'hover');
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
      
      .#{$component}-leading-icon {
        color: t.color('on-secondary-container');
      }
    }
  }
  
  // Input chip
  &--input {
    background-color: t.color('surface-container-highest');
    color: t.color('on-surface');
    border-radius: v.chip('border-radius');
    
    .#{$component}-trailing-icon {
      cursor: pointer;
      
      &:hover {
        color: t.color('error');
      }
    }
  }
  
  // Suggestion chip
  &--suggestion {
    background-color: t.color('surface-container');
    color: t.color('on-surface');
    height: v.chip('suggestion-height');
    
    .#{$component}-leading-icon {
      width: v.chip('suggestion-icon-size');
      height: v.chip('suggestion-icon-size');
      
      svg {
        width: v.chip('suggestion-icon-size');
        height: v.chip('suggestion-icon-size');
      }
    }
    
    &.#{$component}--selected {
      background-color: t.color('secondary-container');
      color: t.color('on-secondary-container');
    }
  }
}

// Chips container
.#{$container} {
  display: flex;
  flex-wrap: wrap;
  gap: v.spacing('2');
  width: 100%;
  min-height: fit-content;
  height: auto;
  
  &--scrollable {
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: visible; // Don't clip chips vertically
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
    padding-bottom: v.spacing('2');
    
    // Enhanced scrollable behavior
    position: relative;
    white-space: nowrap;
    
    // Improved scrollbar styling
    &::-webkit-scrollbar {
      height: 4px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: t.alpha('on-surface', 0.2);
      border-radius: 4px;
    }
    
    &::-webkit-scrollbar-track {
      background-color: t.alpha('on-surface', 0.05);
      border-radius: 4px;
    }
    
    // Style for Firefox
    scrollbar-width: thin;
    scrollbar-color: t.alpha('on-surface', 0.2) t.alpha('on-surface', 0.05);
    
    // Ensure chip visibility
    .#{$component} {
      flex-shrink: 0; // Prevent chips from shrinking
    }
  }
  
  &--vertical {
    flex-direction: column;
    align-items: flex-start;
    gap: v.spacing('2');
    height: auto;
    min-height: fit-content;
  }
}