// src/components/sheet/_styles.scss
@use '../../styles/abstract/base' as base;
@use '../../styles/abstract/variables' as v;
@use '../../styles/abstract/functions' as f;
@use '../../styles/abstract/mixins' as m;
@use '../../styles/abstract/theme' as t;

$component: '#{base.$prefix}-sheet';

.#{$component} {
  // Base styles
  position: fixed;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  background-color: t.color('surface');
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
  overflow: hidden;
  
  // Common elevated surface styling
  border-radius: 12px 12px 0 0;
  box-sizing: border-box;
  max-width: 100%;
  max-height: 100%;
  
  // Initially hidden
  opacity: 0;
  pointer-events: none;
  
  // Typography for content
  @include m.typography('body-medium');
  
  // Scrim (background overlay)
  &-scrim {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: t.alpha('scrim', 0.32);
    z-index: 999;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    pointer-events: none;
  }
  
  &--open {
    opacity: 1;
    pointer-events: auto;
    
    + .#{$component}-scrim {
      opacity: 1;
      pointer-events: auto;
    }
  }
  
  // Drag handle
  &-handle {
    width: 32px;
    height: 4px;
    border-radius: 2px;
    background-color: t.color('outline-variant');
    margin: 8px auto;
    cursor: grab;
    
    &:active {
      cursor: grabbing;
    }
  }
  
  // Title area
  &-title {
    padding: 16px 24px 0;
    @include m.typography('headline-small');
    color: t.color('on-surface');
  }
  
  // Content container
  &-content {
    padding: 16px 24px 24px;
    overflow-y: auto;
    flex: 1;
    // Ensure a min-height for small content
    min-height: 32px;
  }
  
  // Position variants
  &--bottom {
    bottom: 0;
    left: 0;
    right: 0;
    transform: translateY(100%);
    border-radius: 28px 28px 0 0;
    
    &.#{$component}--open {
      transform: translateY(0);
    }
  }
  
  &--top {
    top: 0;
    left: 0;
    right: 0;
    transform: translateY(-100%);
    border-radius: 0 0 28px 28px;
    
    &.#{$component}--open {
      transform: translateY(0);
    }
    
    .#{$component}-handle {
      margin: 0 auto 8px;
    }
  }
  
  &--left {
    top: 0;
    bottom: 0;
    left: 0;
    transform: translateX(-100%);
    border-radius: 0 28px 28px 0;
    
    &.#{$component}--open {
      transform: translateX(0);
    }
    
    .#{$component}-handle {
      width: 4px;
      height: 32px;
      margin: auto 8px auto auto;
    }
  }
  
  &--right {
    top: 0;
    bottom: 0;
    right: 0;
    transform: translateX(100%);
    border-radius: 28px 0 0 28px;
    
    &.#{$component}--open {
      transform: translateX(0);
    }
    
    .#{$component}-handle {
      width: 4px;
      height: 32px;
      margin: auto auto auto 8px;
    }
  }
  
  // Variant styles
  &--standard {
    // Apply different elevation based on position
    &.#{$component}--bottom,
    &.#{$component}--top {
      width: 100%;
      max-width: 640px;
      margin: 0 auto;
      @include m.elevation(3);
    }
    
    &.#{$component}--left,
    &.#{$component}--right {
      max-width: 360px;
      width: 90%;
      @include m.elevation(3);
    }
  }
  
  &--modal {
    // Modal variant has higher elevation and a required scrim
    @include m.elevation(5);
    
    &.#{$component}--bottom,
    &.#{$component}--top {
      width: 100%;
      max-width: 560px;
      margin: 0 auto;
    }
    
    &.#{$component}--left,
    &.#{$component}--right {
      max-width: 320px;
      width: 90%;
    }
    
    + .#{$component}-scrim {
      background-color: t.alpha('scrim', 0.5);
    }
  }
  
  &--expanded {
    // Full screen variant
    &.#{$component}--bottom,
    &.#{$component}--top {
      height: 100%;
      max-height: calc(100% - 24px);
      width: 100%;
    }
    
    &.#{$component}--left,
    &.#{$component}--right {
      width: 100%;
      max-width: 100%;
    }
  }
  
  // States
  &--dismissible {
    .#{$component}-scrim {
      cursor: pointer;
    }
  }
  
  // Elevation levels (1-5)
  &--elevation-1 {
    @include m.elevation(1);
  }
  
  &--elevation-2 {
    @include m.elevation(2);
  }
  
  &--elevation-3 {
    @include m.elevation(3);
  }
  
  &--elevation-4 {
    @include m.elevation(4);
  }
  
  &--elevation-5 {
    @include m.elevation(5);
  }
}